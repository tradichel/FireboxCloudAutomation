AWSTemplateFormatVersion: "2010-09-09"
Description: "Firebox Private Bucket Policy"
Parameters:
  ParamStackName: 
    Type: String
    Default: "Firebox-Trial"
    Description: "Stack name used in tags and such"
  ParamAdminUser: 
    Type: String
    Description: "User allowed to upload files to bucket"
  ParamAdminCidr: 
    Type: String
    Default: "0.0.0.0/0" 
    Description: "CIDR allowed to upload files to bucket"
Resources:
  FireboxPrivateBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: 
        !ImportValue FireboxPrivateBucket
      PolicyDocument: 
        Statement: 
          - 
            Sid: DenyIncorrectEncryptionHeader
            Action: 
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !ImportValue FireboxPrivateBucketResourcesArn
            Principal: "*"
            Condition: 
              StringNotEquals: 
                s3:x-amz-server-side-encryption: 
                  - "AES256"
          - 
            Sid: DenyUnEncryptedObjectUploads
            Action: 
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !ImportValue FireboxPrivateBucketResourcesArn
            Principal: "*"
            Condition: 
              StringEquals: 
                s3:x-amz-server-side-encryption: 
                  - !Ref AWS::NoValue
          - 
            Sid: DenyNoMFAonUpload
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource: !ImportValue FireboxPrivateBucketResourcesArn
            Principal: "*"
            Condition: 
              BoolIfExists: 
                aws:MultiFactorAuthPresent: 
                  - false
              NumericGreaterThan:
                aws:MultiFactorAuthAge: 
                  - 3600
          - 
            Sid: Firebox Admin User
            Action:
              - "s3:*"
            Effect: "Allow"
            Resource: 
              - !ImportValue FireboxPrivateBucketResourcesArn
              - !ImportValue FireboxPrivateBucketArn
            Principal: 
              AWS:
                Fn::Join: 
                  - ""
                  -
                    - "arn:aws:iam::"
                    - !Ref AWS::AccountId
                    - ":user/"
                    - !Ref ParamAdminUser
            Condition: 
              IpAddress: 
                aws:SourceIp: 
                  - !Ref ParamAdminCidr
              BoolIfExists: 
                aws:MultiFactorAuthPresent: 
                  - true
          - 
            Sid: AllowLambaCLIRoleGet
            Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !ImportValue FireboxPrivateBucketResourcesArn
            Principal: 
              AWS: !ImportValue FireboxLambdaCLIRoleArn
          - 
            Sid: AllowLambaCLIRoleGetObject
            Action:
              - "s3:ListBucket"
            Effect: "Allow"
            Resource: !ImportValue FireboxPrivateBucketArn
            Principal: 
              AWS: !ImportValue FireboxLambdaCLIRoleArn


#restrict access only from S3 endpoint
#{
#  "Version": "2012-10-17",
#  "Id": "Policy1415115909152",
#  "Statement": [
#    {
#      "Sid": "Access-to-specific-VPCE-only",
#      "Principal": "*",
#      "Action": "s3:*",
#      "Effect": "Deny",
#      "Resource": ["arn:aws:s3:::my_secure_bucket",
#                   "arn:aws:s3:::my_secure_bucket/*"],
#      "Condition": {
#        "StringNotEquals": {
#          "aws:sourceVpce": "vpce-1a2b3c4d"
#        }
#      }
#    }
#  ]
#} 