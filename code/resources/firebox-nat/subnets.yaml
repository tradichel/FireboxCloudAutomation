AWSTemplateFormatVersion: "2010-09-09"
Description: "Firebox Cloud Subnets"
#TODO: add internet gateway to public subnet
#TODO: All traffic out of Interent goes through NAT with rule like this
#0.0.0.0/0 eni-4e411442 / i-07da727c3da17a529
#TODO: create eni that has public EIP attached, source/dest false, delete on termination = true
#Associated with firebox EC2
#eth0 = public subnet
#eth1 = private subnet
Parameters: 
  ParamStackName: 
    Type: String
    Default: "firebox-trial"
    Description: "Name used in resource tags and names"
  ParamPublicSubnetCidr: 
    Type: String
    Default: "10.0.0.0/24"
    Description: "CIDR block for public subnet"
  ParamAllowedOutCidr: 
    Type: String
    Default: "0.0.0.0/0"
    Description: "CIDR block for allowed outbound traffic"
  ParamPrivateSubnetCidr: 
    Type: String
    Default: "10.0.1.0/24"
    Description: "CIDR block for private subnet"
Resources:
  FireboxPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        !ImportValue FireboxVPC
      CidrBlock: 
        Ref: ParamPrivateSubnetCidr
      AvailabilityZone: 
        !Select 
          - 1
          - !GetAZs ""
      Tags:
      - Key: Name
        Value: FireboxPrivateSubnet
      - Key: Stack
        Value: 
          Ref: ParamStackName
  FireboxPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        !ImportValue FireboxVPC
      CidrBlock: 
        Ref: ParamPublicSubnetCidr
      AvailabilityZone: 
        !Select 
          - 1
          - !GetAZs ""
      Tags:
      - Key: Name
        Value: FireboxPublicSubnet
      - Key: Stack
        Value: 
          Ref: ParamStackName
  FireboxPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: 
        !ImportValue FireboxVPC
  FireboxPublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: 
        !ImportValue FireboxVPC
  FireboxPublicInternetGatewayRoute:
    Type: "AWS::EC2::Route"
    Properties: 
      DestinationCidrBlock: 
        Ref: ParamAllowedOutCidr
      GatewayId: 
        !ImportValue FireboxInternetGateway
      RouteTableId: 
        Ref: FireboxPublicRouteTable
  FireboxPrivateRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId:
        Ref: FireboxPrivateRouteTable
      SubnetId: 
        Ref: FireboxPrivateSubnet
  FireboxPublicRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId:
        Ref: FireboxPublicRouteTable
      SubnetId: 
        Ref: FireboxPublicSubnet  
Outputs:
  FireboxPrivateSubnet:
    Value: !Ref FireboxPrivateSubnet
    Export:
      Name: "FireboxPrivateSubnet"
  FireboxPublicSubnet:
    Value: !Ref FireboxPublicSubnet
    Export:
      Name: "FireboxPublicSubnet"