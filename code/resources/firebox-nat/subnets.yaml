AWSTemplateFormatVersion: "2010-09-09"
Description: "Firebox Cloud Subnets"
Parameters: 
  ParamStackName: 
    Type: String
    Default: "firebox-trial"
    Description: "Name used in resource tags and names"
  ParamPublicSubnetCidr: 
    Type: String
    Default: "10.0.0.0/24"
    Description: "CIDR block for public subnet"
  ParamAllowedOutCidr: 
    Type: String
    Default: "0.0.0.0/0"
    Description: "CIDR block for allowed outbound traffic"
  ParamPrivateSubnetCidr: 
    Type: String
    Default: "10.0.1.0/24"
    Description: "CIDR block for private subnet"
  ParamAdminCidr: 
    Type: String
    Default: "0.0.0.0/0"
    Description: "Admin IP Address to allow inbound CLI connections"
  ParamWebUIPort: 
    Type: String
    Default: "8080"
    Description: "Open port for CLI access to Firebox on port 8080"
Resources:
  FireboxPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue FireboxVPC
      CidrBlock: 
        Ref: ParamPrivateSubnetCidr
      AvailabilityZone: 
        !Select 
          - 1
          - !GetAZs ""
      Tags:
      - Key: Name
        Value: FireboxPrivateSubnet
      - Key: Stack
        Value: !Ref ParamStackName
  FireboxPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !ImportValue FireboxVPC
  FireboxPrivateRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: !Ref FireboxPrivateRouteTable
      SubnetId: !Ref FireboxPrivateSubnet
  ####
  #By Default all inbound/outbound traffic is allowed
  #through PRIVATE NACLs. If you want to change that
  #add the NACL + whatever rules you want below
  #
  #PrivateSubnetNacl:
  #  Type: "AWS::EC2::NetworkAcl"
  #  Properties:
  #    Tags:
  #      - Key: Name
  #        Value: FireboxPrivateSubnetNacl
  #      - Key: Stack
  #        Value: 
  #          !Ref ParamStackName
  #    VpcId: !ImportValue FireboxVPC
  #PrivateSubnetNaclAssociation:
  #  Type: "AWS::EC2::SubnetNetworkAclAssociation"
  #  Properties:
  #    SubnetId: !Ref FireboxPrivateSubnet
  #    NetworkAclId: !Ref FireboxPrivateSubnetNacl
  #Not adding any rules by default. They will be added later as need to allow traffic.
  #If you would like to add rules uncomment and add ports/protocols below.
  #http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol
  #FireboxPrivateSubnetIngressNaclEntry:
  #  Type: "AWS::EC2::NetworkAclEntry"
  #  Properties: 
  #    CidrBlock: "0.0.0.0/0" #the whole Internet!
  #    Egress: false #ingress
  #    NetworkAclId: !Ref FireboxPrivateSubnetNacl
  #    #Protocol -1 = Everything; Port Range is ignored.
  #    Protocol: -1
  #    PortRange: #required if protocol is not -1
  #       ToPort:
  #       FromPort
  #    RuleAction : "Deny" #change to allow if needed
  #    #Rules are processed in order. 
  #    #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html
  #    RuleNumber : "1000" #using 1000 range for ingress rules
  #FireboxPrivateSubnetEgressNaclEntry:
  #  Type: "AWS::EC2::NetworkAclEntry"
  #  Properties: 
  #    CidrBlock: "0.0.0.0/0" #the whole Internet!
  #    Egress: true #egress
  #    NetworkAclId: !Ref FireboxPrivateSubnetNacl
  #    #Protocol -1 = Everything; Port Range is ignored.
  #    Protocol: -1
  #    PortRange: #required if protocol is not -1
  #       ToPort:
  #       FromPort
  #    RuleAction : "Deny" #change to allow if needed
  #    RuleNumber : "2000" #using 2000 range for egress rules

  FireboxPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue FireboxVPC
      CidrBlock: 
        Ref: ParamPublicSubnetCidr
      AvailabilityZone: 
        !Select 
          - 1
          - !GetAZs ""
      Tags:
      - Key: Name
        Value: FireboxPublicSubnet
      - Key: Stack
        Value: !Ref ParamStackName
  FireboxPublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !ImportValue FireboxVPC
  FireboxPublicInternetGatewayRoute:
    Type: "AWS::EC2::Route"
    Properties: 
      DestinationCidrBlock: !Ref ParamAllowedOutCidr
      GatewayId: !ImportValue FireboxInternetGateway
      RouteTableId: !Ref FireboxPublicRouteTable

  FireboxPublicRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: !Ref FireboxPublicRouteTable
      SubnetId: !Ref FireboxPublicSubnet  
  ###
  # For our public subnet we will only open up rules as needed.
  # Add Web UI port rule
  ###
  FireboxPublicSubnetNacl:
    Type: "AWS::EC2::NetworkAcl"
    Properties:
      Tags:
        - Key: Name
          Value: FireboxPrivateSubnetNacl
        - Key: Stack
          Value: !Ref ParamStackName
      VpcId: !ImportValue FireboxVPC
      Tags:
        - Key: Name
          Value: "Firebox Public Subnet Nacl"
        - Key: Stack
          Value: !Ref ParamStackName
  #Allow Admin CIDR to access Web UI 
  #http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-network-acl-entry.html#cfn-ec2-networkaclentry-protocol
  #If you must - you could leave this rule out and only add it if required.
  FireboxPublicSubnetIngressNaclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: !Ref ParamAdminCidr
      Egress: false #ingress
      NetworkAclId: !Ref FireboxPublicSubnetNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      PortRange: #required if protocol is not -1
         From: !Ref ParamWebUIPort
         To: !Ref ParamWebUIPort
      RuleAction : "Allow" 
      #Rules are processed in order. 
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html
      RuleNumber : "1001" #using 1000 range for ingress rules
  FireboxPublicSubnetEgressNaclEntry:
    Type: "AWS::EC2::NetworkAclEntry"
    Properties: 
      CidrBlock: !Ref ParamAdminCidr
      Egress: true #egress
      NetworkAclId: !ImportValue FireboxPublicNacl
      #https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml
      Protocol: 6
      #Ephemeral ports outbound
      #http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html#VPC_ACLs_Ephemeral_Ports
      PortRange: 
         From: 1024
         To: 65535
      RuleAction : "Allow" #change to allow if needed
      RuleNumber : "2001" #using 2000 range for egress rules
  FireboxPublicSubnetNaclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref FireboxPublicSubnet
      NetworkAclId: !Ref FireboxPublicSubnetNacl 
Outputs:
  FireboxPrivateSubnet:
    Value: !Ref FireboxPrivateSubnet
    Export:
      Name: "FireboxPrivateSubnet"
  FireboxPublicSubnet:
    Value: !Ref FireboxPublicSubnet
    Export:
      Name: "FireboxPublicSubnet"
  FireboxPublicRouteTable:
    Value: !Ref FireboxPublicRouteTable
    Export:
      Name: "FireboxPublicRouteTable"
  FireboxPrivateRouteTable:
    Value: !Ref FireboxPrivateRouteTable
    Export:
      Name: "FireboxPrivateRouteTable"
  FireboxPublicNacl:
    Value: !Ref FireboxPublicSubnetNacl
    Export:
      Name: "FireboxPublicNacl"