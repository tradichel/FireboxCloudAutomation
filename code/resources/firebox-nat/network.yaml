AWSTemplateFormatVersion: "2010-09-09"
Description: "Firebox Cloud AWS Network"
Parameters: 
  ParamStackName: 
    Type: String
    Default: "firebox-trial"
    Description: "Name used in resource tags and names"
  ParamVPCCidr: 
    Type: String
    Default: "10.0.0.0/16"
    Description: "CIDR block for VPC"
  ParamVPCCidr: 
    Type: String
    Default: "10.0.0.0/16"
    Description: "CIDR block for VPC"
  ParamSubnetCidr: 
    Type: String
    Default: "10.0.0.0/24"
    Description: "CIDR block for Subnet"
Resources:
  FireboxVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 
        Ref: ParamVPCCidr
      EnableDnsSupport: 'true'
      Tags:
      - Key: Name
        Value: FireboxCloudVPC
      - Key: Stack
        Value: 
          Ref: ParamStackName
  FireboxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Firebox Security Group"
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: "-1"
      VpcId: 
        Ref: FireboxVPC
      Tags:
      - Key: Name
        Value: FireboxPrivateSubnet
      - Key: Stack
        Value: 
          Ref: ParamStackName
  FireboxPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: FireboxVPC
      CidrBlock: 
        Ref: ParamSubnetCidr
      Tags:
      - Key: Name
        Value: FireboxPrivateSubnet
      - Key: Stack
        Value: 
          Ref: ParamStackName
  FireboxPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: 
        Ref: FireboxVPC
      CidrBlock: 
        Ref: ParamSubnetCidr
      Tags:
      - Key: Name
        Value: FireboxPublicSubnet
      - Key: Stack
        Value: 
          Ref: ParamStackName
  FireboxPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: 
        Ref: FireboxVPC
  FireboxPublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: 
        Ref: FireboxVPC
  FireboxPrivateRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId:
        Ref: FireboxPrivateRouteTable
      SubnetId: 
        Ref: FireboxPrivateSubnet
  FireboxPublicRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId:
        Ref: FireboxPublicRouteTable
      SubnetId: 
        Ref: FireboxPublicSubnet  
Outputs:
  FireboxSecurityGroup:
    Value: !Ref FireboxSecurityGroup
    Export:
      Name: "FireboxSecurityGroup"
  FireboxPrivateSubnet:
    Value: !Ref FireboxPrivateSubnet
    Export:
      Name: "FireboxSubnet"
  FireboxPublicSubnet:
    Value: !Ref FireboxPublicSubnet
    Export:
      Name: "FireboxPublicSubnet"